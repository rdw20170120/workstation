#!/usr/bin/env bash
[[ -n "${BO_Trace}" ]] && echo "TRACE: Executing${BASH_SOURCE}"
# NO: set -e
# Intended to be executed in a BASH shell.

report_status_and_exit() {
    local -ir Status=$?
    if [[ "${Status}" -eq 0 ]] ; then
        echo "INFO:  ${0} exiting with status ${Status}"
    else
        echo "FATAL: ${0} exiting with status ${Status}"
    fi
    exit ${Status}
}
trap report_status_and_exit EXIT
###############################################################################
# Run application

# This is intended to be the single primary execution entry point for this
# project.  Ideally, the user will invoke this script and everything else
# will happen as needed.  If this script is unable to finish, then it should
# abort after giving the user feedback about how they might proceed further.

# Require activation
if [[ -z "$BO_Project" ]] ; then
    echo "FATAL: Environment variable 'BO_Project' is undefined, aborting"
    exit 1
fi

Script=$BO_Project/BriteOnyx/bin/lib/configure-Python.bash
if [[ -r $Script ]] ; then
    source $Script
else
    echo "WARN: Script file '$Script' is not readable"
fi

cd $BO_Project/src/app

# Execute Python
cmd='python3'
# cmd+=' -bb'
cmd+=' -m MODULE'
echo $cmd $@
$cmd $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# set -o verbose
# set -o xtrace
# Code to debug...
# set +o verbose
# set +o xtrace
: << 'DisabledContent'
DisabledContent

