#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
# NO: trap ... EXIT
###############################################################################
[[ -z "${BO_Project}" ]] &&
    1>&2 echo "ERROR: Aborting, this project is NOT ACTIVATED" &&
    exit 99

main() {
    # Reformat Python code using Black
    require_arguments $# 0
    require_variable BO_cmd_black

    # Temporarily override user setting to keep Black's cache within the project directory
    export XDG_CACHE_HOME="${BO_Project}/.cache"

    log_debug "Reformatting Python code using Black"
    # NOTE: that Black will not detect scripts as Python code
    # if they lack the `.py` extension,
    # so list them on the command-line explicitly
    ${BO_cmd_black} \
        --config "${BO_Project}/cfg/pyproject.toml" \
        "${BO_Project}/BriteOnyx/bin/files-list" \
        "${BO_Project}/BriteOnyx/bin/files-count_by_extension" \
        "${BO_Project}/BriteOnyx/bin/gen-merge" \
        "${BO_Project}/BriteOnyx/bin/sync_home" \
        "${BO_Project}"

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

