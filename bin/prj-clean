#!/usr/bin/env bash
set -e
# This script is intended to be executed by a user in a BASH shell.

# Clean project directory
# TODO: Enhance to handle directories

if [[ -z "$DirProject" ]] ; then
    echo "FATAL: Environment variable 'DirProject' is undefined, aborting"
    exit 1
fi

if [[ -z "$PVE" ]] ; then
    echo "FATAL: Environment variable 'PVE' is undefined, aborting"
    exit 1
fi

findAnd () {
    # Find and perform action $1 on files within directory $2 matching pattern $3
    # $1 = action to perform, either 'delete' or 'print'
    # $2 = directory in which to work
    # $3 = filename pattern to match
    find $2 -not -path "$DirProject/.git/*" -and -not -path "$PVE/*" -and -name "$3" -$1 -and -type f
}

echo "INFO: Found these files..."
findAnd print $DirProject '__pycache'
findAnd print $DirProject '*.bak'
findAnd print $DirProject '*.pyc'

echo "INFO: Deleting files..."
findAnd delete $DirProject '__pycache'
findAnd delete $DirProject '*.bak'
findAnd delete $DirProject '*.pyc'

dir=$DirProject/src/.pytest_cache
echo "INFO: Deleting special directory '$dir' directly..."
rm -fr "$dir"

echo "INFO: Cleaning up Python source files..."
findAnd delete $DirProject/src         '*.py'
findAnd delete $DirProject/lib/python3 '*.py'
findAnd delete $DirProject/lib/python2 '*.py3'

echo "WARN: Found these files REMAINING..."
findAnd print $DirProject             '__pycache'
findAnd print $DirProject             '*.bak'
findAnd print $DirProject             '*.pyc'
findAnd print $DirProject/bin         '*.py'
findAnd print $DirProject/bin         '*.py3'
findAnd print $DirProject/src         '*.py'
findAnd print $DirProject/lib/python3 '*.py'
findAnd print $DirProject/lib/python2 '*.py3'

