 ${Script} $@;
 [[ ! -e "$1" ]] && mkdir -p "$1";
 [[ ! -e "$1" ]];
 [[ "$#" -gt 2 ]] && log_error "Requires 1-2 argument(s) instead of $#" && exit 127;
 [[ "$1" -eq $2 ]];
 [[ "$1" -eq 0 ]] && return 1;
 [[ "$1" -ge "$2" ]];
 [[ "${Status}" -ne 0 ]] && log_warn "${0} exiting with status ${Status}";
 [[ "${Status}" -ne 0 ]] && log_warn "${0} returning with status ${Status}";
 [[ "${Status}" -ne 0 ]] && log_warn "Status ${Status} from script ${0}";
 [[ ${status} -ne 0 ]] && [[ -n "$2" ]] && [[ -r "$2" ]] && log_error "OUTPUT:" && cat $2;
 [[ ${status} -ne 0 ]] && log_warn "Status ${status}: Last command failed: $2";
 [[ -d "$1" ]];
 [[ -e "$1" ]] && delete_file "$1";
 [[ -n "$1" ]];
 [[ -n "${!Name}" ]];
 [[ -r "$1" ]];
 [[ -r "$1" ]];
 [[ -z ${color} ]] && color="${LOG_INFO_COLOR}";
 [[ -z ${level} ]] && level=I;
 abort_on_fail $? "Could not delete file '$1'";
 abort_on_fail $? "Existing forbidden path '$1'"
 abort_on_fail $? "Failed to execute script ${Script}"
 abort_on_fail $? "Failed to write file '$1'";
 abort_on_fail $? "Missing command '$1'"
 abort_on_fail $? "Missing directory '$1'"
 abort_on_fail $? "Missing file '$1'"
 abort_on_fail $? "Missing function '$1'"
 abort_on_fail $? "Missing script '$1'"
 abort_on_fail $? "Missing value '$1'"
 abort_on_fail $? "Requires $2 arguments instead of $1"
 abort_on_fail $? "Requires at least $2 arguments instead of $1"
 abort_on_fail $? "Undefined variable '$1'"
 abort_on_fail ${status} "$3"
 declare -f $1 >&/dev/null;
 echo -e "${color}[$(date -u +"%Y%m%d %H%M%SZ") ${level}] ${text}${LOG_DEFAULT_COLOR}" 1>&2;
 echo -n "$2" > $1;
 else
 else
 else
 exit ${Status}
 exit ${Status}
 exit ${status};
 exit 86;
 exit 86;
 fi;
 fi;
 fi;
 fi;
 forbid_path "$1"
 forbid_path "$1"
 if [[ "${Actual}" -eq 0 ]]; then
 if [[ "${Actual}" -eq 0 ]]; then
 if [[ ${status} -ne 0 ]]; then
 if [[ -z "$2" ]]; then
 local -ir Actual=$1;
 local -ir Actual=$1;
 local -ir status=$1;
 local -ir status=$1;
 local -ir status=$1;
 local -r Context=$2;
 local -r Context=$2;
 local -r Name=$1;
 local -r Name=$1;
 local -r Name=$1;
 local -r Name=$1;
 local -r Script=$1;
 local color="$3";
 local level="$2";
 log_debug "Remembering ${Name} = '${!Name}'"
 log_error "Aborting with status ${status}: $2";
 log_error "Aborting with status ${status}: Last command failed";
 log_error "Expected failure, but instead got success status ${Actual} for ${Context}";
 log_error "Expected success, but instead got failure status ${Actual} for ${Context}";
 log_good "Expected failure, got status ${Actual} for ${Context}";
 log_good "Expected success, got status ${Actual} for ${Context}";
 require_directory "$1"
 require_directory "${!Name}"
 require_file "$1"
 require_file "${!Name}"
 require_script "$1";
 require_value "$1";
 require_value "$1";
 require_value "$1";
 require_value "$1";
 require_value "$1";
 require_value "$1";
 require_value "$1";
 require_value "$1";
 require_value "$1";
 require_value "$2";
 require_value "$2";
 require_variable "$1";
 require_variable "$1";
 return ${Status}
 return 0
 return 0
 return 0
 return 0
 return 0
 return 0
 rm "$1";
 shift 1;
 which $1 >&/dev/null;
Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.9xTqJGseF9/Render
BASH_FUNC_abort_on_fail%%=() {  [[ "$#" -lt 1 ]] && log_error "Requires 1-2 argument(s) instead of $#" && exit 127;
BASH_FUNC_abort_on_fail_with_output%%=() {  require_arguments $# 3;
BASH_FUNC_delete_file%%=() {  require_arguments $# 1;
BASH_FUNC_execute_script%%=() {  require_arguments_at_least $# 1;
BASH_FUNC_expect_failure%%=() {  require_arguments $# 2;
BASH_FUNC_expect_success%%=() {  require_arguments $# 2;
BASH_FUNC_forbid_path%%=() {  require_arguments $# 1;
BASH_FUNC_log_%%=() {  local text="$1";
BASH_FUNC_log_debug%%=() {  log_ "$1" D "${LOG_DEBUG_COLOR}"
BASH_FUNC_log_error%%=() {  log_ "$1" E "${LOG_ERROR_COLOR}"
BASH_FUNC_log_good%%=() {  log_ "$1" G "${LOG_GOOD_COLOR}"
BASH_FUNC_log_info%%=() {  log_ "$@"
BASH_FUNC_log_warn%%=() {  log_ "$1" W "${LOG_WARN_COLOR}"
BASH_FUNC_maybe_create_directories%%=() {  require_arguments $# 1;
BASH_FUNC_maybe_delete_file%%=() {  require_arguments $# 1;
BASH_FUNC_remembering%%=() {  [[ $# -eq 0 ]] && log_error "Variable name is required" && kill -INT $$;
BASH_FUNC_report_on_fail%%=() {  require_arguments $# 2;
BASH_FUNC_report_status_and_exit%%=() {  local -ir Status=$?;
BASH_FUNC_report_status_and_return%%=() {  local -ir Status=$?;
BASH_FUNC_require_arguments%%=() {  [[ "$#" -ne 2 ]] && log_error "Requires 2 argument(s) instead of $#" && exit 127;
BASH_FUNC_require_arguments_at_least%%=() {  [[ "$#" -ne 2 ]] && log_error "Requires 2 argument(s) instead of $#" && exit 127;
BASH_FUNC_require_command%%=() {  require_arguments $# 1;
BASH_FUNC_require_directory%%=() {  require_arguments $# 1;
BASH_FUNC_require_directory_in_variable%%=() {  require_arguments $# 1;
BASH_FUNC_require_file%%=() {  require_arguments $# 1;
BASH_FUNC_require_file_in_variable%%=() {  require_arguments $# 1;
BASH_FUNC_require_function%%=() {  require_arguments $# 1;
BASH_FUNC_require_script%%=() {  require_arguments $# 1;
BASH_FUNC_require_value%%=() {  require_arguments $# 1;
BASH_FUNC_require_variable%%=() {  require_arguments $# 1;
BASH_FUNC_scrubbed%%=() {  sed "s/[[:cntrl:]]\[[0-9;]*m//g"
BASH_FUNC_status_invert%%=() {  require_arguments $# 1;
BASH_FUNC_warn_on_error%%=() {  local -ir Status=$?;
BASH_FUNC_write_file%%=() {  require_arguments $# 2;
BO_NameApp=MODULE
BO_OS=macOS
BO_PVE=/Users/rwill253/project/WIP/workstation/.PVE
BO_PathHomebrew=/usr/local/bin
BO_PathOriginal=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
BO_PathProject=/Users/rwill253/project/WIP/workstation/BriteOnyx/bin:/Users/rwill253/project/WIP/workstation/bin
BO_PathPve=/Users/rwill253/project/WIP/workstation/.PVE/bin
BO_PathSystem=/usr/bin:/bin:/usr/sbin
BO_PathTool=/Users/rwill253/project/WIP/workstation/.PVE/bin
BO_PathUser=/usr/local/bin:/Users/rwill253/bin
BO_Project=/Users/rwill253/project/WIP/workstation
CLICOLOR=true
COLORFGBG=15;0
COLORTERM=truecolor
EDITOR=vim
FakeIt=defined
GREP_OPTIONS=--color=auto
HISTCONTROL=ignoreboth
HISTFILESIZE=500
HISTSIZE=500
HOME=/Users/rwill253
INTERACTIVE_MODE=on
ITERM_PROFILE=Rob on right
ITERM_SESSION_ID=w1t0p0:BEEA5829-6ED7-40BA-A735-2C0BE75C98F2
LANG=en_US.UTF-8
LC_TERMINAL=iTerm2
LC_TERMINAL_VERSION=3.3.9
LOGNAME=rwill253
LOG_DEBUG_COLOR=\033[1;34m
LOG_DEFAULT_COLOR=\033[0m
LOG_ERROR_COLOR=\033[1;31m
LOG_GOOD_COLOR=\033[1;32m
LOG_INFO_COLOR=\033[1m
LOG_WARN_COLOR=\033[1;33m
OLDPWD=/Users/rwill253
PAGER=vimpager
PATH=/Users/rwill253/project/WIP/workstation/.PVE/bin:/usr/bin:/bin:/usr/sbin:/Users/rwill253/project/WIP/workstation/BriteOnyx/bin:/Users/rwill253/project/WIP/workstation/bin:/usr/local/bin:/Users/rwill253/bin
PS1=(.PVE) \[\e]0;\w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$ 
PWD=/Users/rwill253/project/WIP/workstation
PYTHONCOERCELOCALE=warn
PYTHONIOENCODING=utf8:warn
PYTHONPATH=:/Users/rwill253/project/WIP/workstation/src/lib/third_party:/Users/rwill253/project/WIP/workstation/src/lib/mine
PYTHONUTF8=1
Quick=1000000
ReservedDiskSpaceInBytes=10737418240
Run=Dry
SHELL=/bin/bash
SHLVL=1
SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.l3HnCsXgvT/Listeners
TERM=xterm-256color
TERM_PROGRAM=iTerm.app
TERM_PROGRAM_VERSION=3.3.9
TERM_SESSION_ID=w1t0p0:BEEA5829-6ED7-40BA-A735-2C0BE75C98F2
TMPDIR=/var/folders/h8/t5_p7nqn0kl_j9hq0v0vy0yc138n_r/T/BO-rwill253.A6eYrpN2
USER=rwill253
VIRTUAL_ENV=/Users/rwill253/project/WIP/workstation/.PVE
XPC_FLAGS=0x0
XPC_SERVICE_NAME=0
_=/usr/bin/env
__CF_USER_TEXT_ENCODING=0x2345558:0x0:0x0
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
