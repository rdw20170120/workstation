#!/usr/bin/env bash
# This script is intended to be executed by a user in a Bash shell.

# Clone git repositories, if they have not been cloned already.
# Clone from GitHub for my (Rob Williams') account
# NOTE: I reference my special SSH configuration to handle the connection.
# TODO: Resolve how to reconcile divergent branches during pull using one of these:
# hint:   git config pull.rebase false  # merge (the default strategy)
# hint:   git config pull.rebase true   # rebase
# hint:   git config pull.ff only       # fast-forward only

source ~/bin/lib/declare-git.bash

_Source=GitHub

# These are reference copies
Dir=~/project/at\ ${_Source}/reference

UrlPrefix=MeAt${_Source}:rdw20170120
maybe_clone "$Dir" $UrlPrefix build

UrlPrefix=MeAt${_Source}:outsideris
maybe_clone "$Dir" $UrlPrefix citizen

# These are what I am actually working on (Work In Progress)
Dir=~/project/at\ ${_Source}/WIP

UrlPrefix=MeAt${_Source}:rdw20170120
maybe_clone "$Dir" $UrlPrefix workstation

: << 'DisabledContent'
maybe_clone "$Dir" $UrlPrefix astech
maybe_clone "$Dir" $UrlPrefix aws-inventory
maybe_clone "$Dir" $UrlPrefix cb-infrastructure
maybe_clone "$Dir" $UrlPrefix cert
maybe_clone "$Dir" $UrlPrefix couchbase
maybe_clone "$Dir" $UrlPrefix euler
maybe_clone "$Dir" $UrlPrefix first
maybe_clone "$Dir" $UrlPrefix hortonworks
maybe_clone "$Dir" $UrlPrefix javascript
maybe_clone "$Dir" $UrlPrefix ocdp
maybe_clone "$Dir" $UrlPrefix potrero
maybe_clone "$Dir" $UrlPrefix quoting-api
maybe_clone "$Dir" $UrlPrefix restinjava
maybe_clone "$Dir" $UrlPrefix sample-python
maybe_clone "$Dir" $UrlPrefix samplegwtviaant
maybe_clone "$Dir" $UrlPrefix samples
maybe_clone "$Dir" $UrlPrefix trading
maybe_clone "$Dir" $UrlPrefix training
DisabledContent

