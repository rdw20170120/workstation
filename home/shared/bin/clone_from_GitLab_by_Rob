#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
# NO: trap ... EXIT
###############################################################################
# Clone git repositories, if they have not been cloned already.
# NOTE: I reference my special SSH configuration to handle the connection, see `~/.ssh/config`.
# TODO: Implement this:
# hint:   git config pull.ff only       # fast-forward only

source ${HOME}/bin/lib/declare-git.bash

clone_BriteOnyx() {
    maybe_clone "${Dir}/ref" "${Connection}:BriteOnyx" core
    maybe_clone "${Dir}/ref" "${Connection}:not_shared" private_python_library
    maybe_clone "${Dir}/ref" "${Connection}:shared3591916" public_python_library
    maybe_clone "${Dir}/wip" "${Connection}:BriteOnyx" core
    maybe_clone "${Dir}/wip" "${Connection}:not_shared" private_python_library
    maybe_clone "${Dir}/wip" "${Connection}:shared3591916" public_python_library
}

clone_other() {
    maybe_clone "${Dir}/ref" "${Connection}:not_shared" experiment
    maybe_clone "${Dir}/ref" "${Connection}:not_shared" monorepo
    maybe_clone "${Dir}/ref" "${Connection}:not_shared" pythonspeed
    maybe_clone "${Dir}/ref" "${Connection}:shared3591916" learn-gitlab
}

main() {
    # Clone Rob's repositories on GitLab
    local -r Source=GitLab
    local -r Connection=MeAt${Source}
    local -r Dir=${HOME}/repo/${Source}

    clone_BriteOnyx
#   clone_other

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

