#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
# NO: trap ... EXIT
###############################################################################

main() {
    # Populate Anaconda base environment
    local Packages

    anaconda-update
    anaconda-upgrade

    # minimal essential tools
    # TODO: WAIT: conda=23.5.0 seems to be broken,
    # downgrades a lot of packages,
    # and does not support a recent release of mamba
    # Install a reasonably-recent combination of conda & mamba
    Packages="conda=23.3.1 mamba=1.4.2"
    Packages+=' '
    # helpful additional tools
    # For Sam's Club Legato system

    mamba install --name base --yes ${Packages}

    # Populate Python tools via PIP
    local -r python3=${CONDA_PREFIX}/bin/python3
    ${python3} -m pip install --upgrade pip
    ${python3} -m pip install pipenv
    ${python3} -m pip install --upgrade pipenv

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
# Search for Anaconda packages:
mamba repoquery search PACKAGE
mamba repoquery search "PACKAGE>=VERSION"
mamba repoquery depends PACKAGE
mamba repoquery depends --recursive PACKAGE
mamba repoquery depends --tree PACKAGE
mamba repoquery whoneeds --tree PACKAGE

Others to consider:
gitlint
pulumi
pylint
tfproviderlint

# How To unpin an Anaconda package
Edit ${CONDA_PREFIX}/envs/NAME/conda-meta/pinned
DisabledContent

