#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
# NO: trap ... EXIT
###############################################################################
warn_on_error() {
    local -ir Status=$?
    [[ "${Status}" -ne 0 ]] && 
        1>&2 echo "Status ${Status} from script ${0}"
    exit ${Status}
}
trap warn_on_error EXIT
###############################################################################

maybe_copy_file() {
    # Copy file $1 to $2, if $2 is missing
    # $1 = source file
    # $2 = target file
    [[ ! -e "$2" ]] && cp $1 $2
}

main() {
    maybe_copy_file Jenkins/alias.bash   ./alias.bash
    maybe_copy_file Jenkins/context.bash ./context.bash

    local Cmd='echo Hello world'
    Cmd+=' && echo $PATH'
#   Cmd+=' && execute_script tool-report'
#   Cmd+=' && execute_script all-check'
#   Cmd+=' && execute_script test-run'
#   Cmd+=' && execute_script app-run -vvvv'

    nix-shell --keep BO_PathNative --pure --run "${Cmd}"

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

