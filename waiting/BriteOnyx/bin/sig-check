#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
trap warn_on_error EXIT
###############################################################################
[[ -z "${BO_Project}" ]] &&
    1>&2 echo "ERROR: Aborting, this project is NOT ACTIVATED" &&
    exit 99

main() {
    # Check signature file
    require_arguments $# 0

    local Directory
    local Signature=shasum-a256-p.sig
    if [[ -z "$1" ]] ; then
        Directory=${PWD}
    elif [[ -d "$1" ]] ; then
        Directory=$1
    elif [[ -f "$1" ]] ; then
        Signature=$1
        Directory=$(dirname $1)
    else
        abort 1 "Unrecognized argument(s) to ${BASH_SOURCE}"
    fi

    log_debug "Checking SHA256 signature ${Directory}/${Signature}"
    require_directory "${Directory}"
    cd "${Directory}"
    abort_on_fail $? "Failed to cd '${Directory}'"
    require_file "${Signature}"
    shasum -a 256 --check -p --warn ${Signature}
    abort_on_fail $? "Check of SHA256 signatures failed"

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

