#!/usr/bin/env false
# This script is executed via `source` while initializing a Bash shell.
# NO: set -o errexit -o nounset
set -o pipefail +o verbose +o xtrace
# NO: Do NOT `export` this function, it only works if defined locally
me() { echo ${BASH_SOURCE} ; }
[[ -n "${BO_Trace}" ]] && log_trace "Executing $(me)" && \
    [[ "${BO_Trace}" == TRACE ]] && set -o verbose -o xtrace
# NO: Do NOT `trap` since it will stay active in the shell
################################################################################
# Clone git repositories, if they have not been cloned already.
# NOTE: I reference my special SSH configuration to handle the connection, see `~/.ssh/config`.
# TODO: Implement this:
# hint:   git config pull.ff only       # fast-forward only

_Script=${HOME}/bin/lib/declare/git.bash
prepare_to_source "${_Script}" && source "${_Script}"
unset _Script

clone_for_Earthly() {
    maybe_clone "${Dir}/other/earthly" "${Connection}:earthly" earthly
}

clone_for_Elvish() {
    maybe_clone "${Dir}/other/elves" "${Connection}:elves" awesome-elvish
    maybe_clone "${Dir}/other/elves" "${Connection}:elves" elvish
    maybe_clone "${Dir}/other/zzamboni" "${Connection}:zzamboni" dot-elvish
    maybe_clone "${Dir}/other/zzamboni" "${Connection}:zzamboni" elvish-completions
    maybe_clone "${Dir}/other/zzamboni" "${Connection}:zzamboni" elvish-modules
    maybe_clone "${Dir}/other/zzamboni" "${Connection}:zzamboni" elvish-themes
}

clone_for_Emacs() {
    maybe_clone "${Dir}/other/zzamboni" "${Connection}:zzamboni" dot-emacs
    maybe_clone "${Dir}/other/zzamboni" "${Connection}:zzamboni" emacs-org-leanpub
}

main() {
    # Clone others' repositories on GitHub
    local -r Source=GitHub
    local -r Connection=MeAt${Source}
    local -r Dir=${HOME}/repo/${Source}

#   clone_for_Earthly
#   clone_for_Elvish
#   clone_for_Emacs

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

