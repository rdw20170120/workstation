#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
trap warn_on_error EXIT
###############################################################################
[[ -z "${BO_Project}" ]] &&
    1>&2 echo "ERROR: Aborting, this project is NOT ACTIVATED" &&
    exit 99

if [[ -z "${BO_PVE}" ]] ; then
    log_error "Environment variable 'BO_PVE' is undefined, aborting"
    exit 1
fi

main() {
    # Wipe project directory, which is a deeper clean
    # TODO: Wipe other caches such as for 'pip'
    require_arguments $# 0

    prj-clean
    log_debug "Wiping (cleaning deeper)..."
    maybe_delete_directory_tree "${BO_Project}/.pytest_cache"
    maybe_delete_directory_tree "${BO_Project}/log"
    pve-rm

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

