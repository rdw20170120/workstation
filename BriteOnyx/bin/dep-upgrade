#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
trap warn_on_error EXIT
###############################################################################
[[ -z "${BO_Project}" ]] &&
    1>&2 echo "ERROR: Aborting, this project is NOT ACTIVATED" &&
    exit 99

main() {
    # Upgrade Python dependencies
    require_arguments $# 0

    local -r File=$BO_Project/cfg/requirements.txt

    require_command python3
    
    python3 -m pip --version
    abort_on_fail $? "from python3 -m pip --version"

    log_debug "Upgrading Python dependencies from '${File}'"
    require_file "${File}"
    python3 -m pip install -r ${File} --upgrade --upgrade-strategy=eager
    abort_on_fail $? "from python3 -m pip install ..."

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

