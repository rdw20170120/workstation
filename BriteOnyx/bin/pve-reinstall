#!/usr/bin/env bash
[[ -n "${BO_Debug}" ]] && 1>&2 echo "DEBUG: Executing ${BASH_SOURCE}"
# NO: set -e
# Intended to be executed in a BASH shell.

report_status_and_exit() {
    local -ir Status=$?
    [[ "${Status}" -ne 0 ]] && 
        1>&2 echo "FATAL: ${0} exiting with status ${Status}"
    exit ${Status}
}
trap report_status_and_exit EXIT
###############################################################################
# Reinstall Python virtual environment directory

[[ -z "${BO_Project}" ]] && 
    1>&2 echo "FATAL: This project is NOT ACTIVATED, aborting" && 
    exit 99

if [[ -z "$PVE" ]] ; then
    echo "FATAL: Environment variable 'PVE' is undefined, aborting"
    exit 1
fi

echo "INFO: Reinstalling Python virtual environment directory '$PVE'"
pve-rm
pve-create
source $BO_Project/BriteOnyx/bin/lib/pve-activate.bash
dep-install

main() {
    # TODO: DESCRIPTION

    # TODO: CONTENT

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# set -o verbose
# set -o xtrace
# Code to debug...
# set +o verbose
# set +o xtrace
: << 'DisabledContent'
DisabledContent

