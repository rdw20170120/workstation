#!/usr/bin/env bash
[[ -n "${BO_Debug}" ]] && 1>&2 echo "DEBUG: Executing ${BASH_SOURCE}"
# NO: set -e
# Intended to be executed in a BASH shell.

report_status_and_exit() {
    local -ir Status=$?
    [[ "${Status}" -ne 0 ]] && 
        1>&2 echo "FATAL: ${0} exiting with status ${Status}"
    exit ${Status}
}
trap report_status_and_exit EXIT
###############################################################################
# Generate source

[[ -z "${BO_Project}" ]] && 
    1>&2 echo "FATAL: This project is NOT ACTIVATED, aborting" && 
    exit 99

# Require TMPDIR
if [[ -z "$TMPDIR" ]] ; then
    echo "FATAL: Environment variable 'TMPDIR' is undefined, aborting"
    exit 1
fi

# Recreate target directory (handled within Python)
DirTgt=$TMPDIR/tgt

echo "INFO: Generating content into directory '$DirTgt'"
cd $BO_Project/src/gen

# Execute Python
cmd='python3'
# cmd+=' -bb'
cmd+=' -m generate'
cmd+=" $DirTgt"
echo $cmd $@
$cmd $@
abort_on_fail $? "Source generation failed"

# Merge generated files into project directory
# TODO: RESEARCH: why Meld does not open a new tab on macOS?
cmd='meld --newtab'
cmd+=" '$DirTgt' '$BO_Project'"
cmd+=' >/dev/null 2>&1 &'
echo "INFO: Use the following command to manually merge the generated source:"
echo $cmd

main() {
    # TODO: DESCRIPTION

    # TODO: CONTENT

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# set -o verbose
# set -o xtrace
# Code to debug...
# set +o verbose
# set +o xtrace
: << 'DisabledContent'
DisabledContent

