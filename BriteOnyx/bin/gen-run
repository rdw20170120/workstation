#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
# NO: trap ... EXIT
###############################################################################
[[ -z "${BO_Project}" ]] &&
    1>&2 echo "ERROR: Aborting, this project is NOT ACTIVATED" &&
    exit 99

main() {
    # Generate source
    local Cmd
    
    require_directory_in BO_Project
    require_directory_in BO_DirTemp
    require_variable BO_cmd_meld
    require_variable BO_cmd_python3

    # Recreate target directory (handled within Python)
    local -r DirTgt=${BO_DirTemp}/tgt

    log_info "Generating source into directory '${DirTgt}'"
    cd "${BO_Project}/src/gen" ; abort_on_fail $?
    Cmd=${BO_cmd_python3}
    # Cmd+=' -bb'
    Cmd+=' -m generate'
    Cmd+=" ${DirTgt}"
    log_debug "${Cmd} $@"
    ${Cmd} $@
    abort_on_fail $? "Source generation failed"

    log_info "Use the following command to manually merge the generated source:"
    Cmd='&>/dev/null'
    Cmd+=" ${BO_cmd_meld}"
    Cmd+=' "${BO_Project}"'
    Cmd+=' ${BO_DirTemp}/tgt'
    Cmd+=' &'
    log_info "${Cmd}"

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

