#!/usr/bin/env bash
# Intended to be executed in a Bash shell.
[[ -n "${BO_Trace}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}" && [[ "${BO_Trace}" != 'TRACE' ]] && set -vx
# NO: set -e
# NO: trap ... EXIT
###############################################################################
[[ -z "${BO_Project}" ]] &&
    1>&2 echo "ERROR: Aborting, this project is NOT ACTIVATED" &&
    exit 99

main() {
    # Capture Anaconda state
    require_arguments $# 0
    require_variable BO_cmd_conda

    local -r Dir=${BO_Project}/out
    require_directory "${Dir}"
    local -r File=${Dir}/anaconda.out

    log_debug "Capturing Anaconda status to '${File}'"
    &>"${File}" anaconda-report
    require_file "${File}"

    require_variable BO_FileAnacondaJson
    log_info "Capturing installed packages to file '${BO_FileAnacondaJson}'"
    ${BO_cmd_conda} list --no-pip >"${BO_FileAnacondaJson}"
    require_file "${BO_FileAnacondaJson}"

    require_variable BO_FileAnacondaYaml
    log_info "Capturing installed packages to file '${BO_FileAnacondaYaml}'"
    ${BO_cmd_conda} list --explicit --export --md5 --no-pip >"${BO_FileAnacondaYaml}"
    require_file "${BO_FileAnacondaYaml}"
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -vx
# Code to debug...
# set +vx

: << 'DisabledContent'
DisabledContent

