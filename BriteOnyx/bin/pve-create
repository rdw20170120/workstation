#!/usr/bin/env bash
[[ -n "${BO_Debug}" ]] && 1>&2 echo "Executing ${BASH_SOURCE}"
# NO: set -e
# Intended to be executed in a Bash shell.
trap warn_on_error EXIT
###############################################################################
[[ -z "${BO_Project}" ]] &&
    1>&2 echo "ERROR: Aborting, this project is NOT ACTIVATED" &&
    exit 99

if [[ -z "$BO_PVE" ]] ; then
    log_error "Environment variable 'BO_PVE' is undefined, aborting"
    exit 1
fi

log_debug "Creating Python virtual environment directory '$BO_PVE'"
python3 -m venv $BO_PVE

echo 'WARN: This new Python virtual environment has NOT been activated, so you should `exit` this shell and activate a new one'

main() {
    # Create (and activate) Python virtual environment directory

    # TODO: CONTENT

    return 0
}

main $@

###############################################################################
# NOTE: Uncomment these lines for debugging, placed where needed
# export PS4='$ ' ; set -o verbose ; set -o xtrace
# Code to debug...
# set +o verbose ; set +o xtrace
: << 'DisabledContent'
DisabledContent

